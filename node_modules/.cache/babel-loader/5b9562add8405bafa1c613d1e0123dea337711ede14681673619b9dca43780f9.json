{"ast":null,"code":"var _jsxFileName = \"/Users/rajatarora084/Desktop/diagnal-hiring-challenge/src/components/moviePane/MoviePane.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from \"react\";\nimport Col from \"react-bootstrap/Col\";\nimport { fetchMovieData, fetchMoviePoster } from \"../../apis/apis\";\nimport ContextProvider from \"../../utils/ContextProvider\";\nimport \"./MoviePane.scss\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MoviePane = ({\n  movieIndex\n}) => {\n  _s();\n  var _allMovies$movieIndex;\n  const {\n    allMovies\n  } = useContext(ContextProvider);\n  const [posterImg, setPosterImg] = useState(null);\n  const fetchPoster = async movie => {\n    console.log(\"fetching poster\", movie === null || movie === void 0 ? void 0 : movie[\"poster-image\"]);\n    const result = await fetchMoviePoster({\n      posterId: movie === null || movie === void 0 ? void 0 : movie[\"poster-image\"]\n    });\n    console.log(\"result\", result);\n    // const base64 = btoa(\n    //     new Uint8Array(result.data).reduce(\n    //         (data, byte) => data + String.fromCharCode(byte),\n    //         ''\n    //     )\n    // )\n\n    const abc = Buffer.from(result.data, 'binary').toString('base64');\n    setPosterImg(abc);\n  };\n  useEffect(() => {\n    if (movieIndex < allMovies.length) {\n      fetchPoster(allMovies[movieIndex]);\n    }\n  }, [movieIndex]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: movieIndex < allMovies.length ? /*#__PURE__*/_jsxDEV(Col, {\n      xs: 3,\n      className: \"movie-pane\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: `data:;base64,${posterImg}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), ((_allMovies$movieIndex = allMovies[movieIndex]) === null || _allMovies$movieIndex === void 0 ? void 0 : _allMovies$movieIndex.name) || \"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 45\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n  }, void 0, false);\n};\n_s(MoviePane, \"UyAjAfc8a9rGEJ/PXgvWV2F/2Ts=\");\n_c = MoviePane;\nexport default MoviePane;\nvar _c;\n$RefreshReg$(_c, \"MoviePane\");","map":{"version":3,"names":["React","useContext","useEffect","useState","Col","fetchMovieData","fetchMoviePoster","ContextProvider","jsxDEV","_jsxDEV","Fragment","_Fragment","MoviePane","movieIndex","_s","_allMovies$movieIndex","allMovies","posterImg","setPosterImg","fetchPoster","movie","console","log","result","posterId","abc","Buffer","from","data","toString","length","children","xs","className","src","fileName","_jsxFileName","lineNumber","columnNumber","name","_c","$RefreshReg$"],"sources":["/Users/rajatarora084/Desktop/diagnal-hiring-challenge/src/components/moviePane/MoviePane.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport Col from \"react-bootstrap/Col\";\nimport { fetchMovieData, fetchMoviePoster } from \"../../apis/apis\";\nimport ContextProvider from \"../../utils/ContextProvider\";\nimport \"./MoviePane.scss\";\n\n\nconst MoviePane = ({ movieIndex }) => {\n\n    const { allMovies } = useContext(ContextProvider);\n\n    const [posterImg, setPosterImg] = useState(null);\n\n    const fetchPoster = async (movie) => {\n        console.log(\"fetching poster\", movie?.[\"poster-image\"]);\n        const result = await fetchMoviePoster({\n            posterId: movie?.[\"poster-image\"]\n        });\n        console.log(\"result\", result);\n        // const base64 = btoa(\n        //     new Uint8Array(result.data).reduce(\n        //         (data, byte) => data + String.fromCharCode(byte),\n        //         ''\n        //     )\n        // )\n\n        const abc = Buffer.from(result.data, 'binary').toString('base64')\n        setPosterImg(abc);\n\n\n    }\n\n    useEffect(() => {\n        if (movieIndex < allMovies.length) {\n            fetchPoster(allMovies[movieIndex])\n\n        }\n    }, [movieIndex]);\n\n\n    return <>\n        {\n            movieIndex < allMovies.length ? <Col xs={3} className=\"movie-pane\">\n                <img src={`data:;base64,${posterImg}`} />\n                {allMovies[movieIndex]?.name || \"\"}\n            </Col> : <></>\n        }\n    </>\n\n\n};\n\nexport default MoviePane;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC9D,OAAOC,GAAG,MAAM,qBAAqB;AACrC,SAASC,cAAc,EAAEC,gBAAgB,QAAQ,iBAAiB;AAClE,OAAOC,eAAe,MAAM,6BAA6B;AACzD,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAG1B,MAAMC,SAAS,GAAGA,CAAC;EAAEC;AAAW,CAAC,KAAK;EAAAC,EAAA;EAAA,IAAAC,qBAAA;EAElC,MAAM;IAAEC;EAAU,CAAC,GAAGf,UAAU,CAACM,eAAe,CAAC;EAEjD,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAEhD,MAAMgB,WAAW,GAAG,MAAOC,KAAK,IAAK;IACjCC,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEF,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAG,cAAc,CAAC,CAAC;IACvD,MAAMG,MAAM,GAAG,MAAMjB,gBAAgB,CAAC;MAClCkB,QAAQ,EAAEJ,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAG,cAAc;IACpC,CAAC,CAAC;IACFC,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEC,MAAM,CAAC;IAC7B;IACA;IACA;IACA;IACA;IACA;;IAEA,MAAME,GAAG,GAAGC,MAAM,CAACC,IAAI,CAACJ,MAAM,CAACK,IAAI,EAAE,QAAQ,CAAC,CAACC,QAAQ,CAAC,QAAQ,CAAC;IACjEX,YAAY,CAACO,GAAG,CAAC;EAGrB,CAAC;EAEDvB,SAAS,CAAC,MAAM;IACZ,IAAIW,UAAU,GAAGG,SAAS,CAACc,MAAM,EAAE;MAC/BX,WAAW,CAACH,SAAS,CAACH,UAAU,CAAC,CAAC;IAEtC;EACJ,CAAC,EAAE,CAACA,UAAU,CAAC,CAAC;EAGhB,oBAAOJ,OAAA,CAAAE,SAAA;IAAAoB,QAAA,EAEClB,UAAU,GAAGG,SAAS,CAACc,MAAM,gBAAGrB,OAAA,CAACL,GAAG;MAAC4B,EAAE,EAAE,CAAE;MAACC,SAAS,EAAC,YAAY;MAAAF,QAAA,gBAC9DtB,OAAA;QAAKyB,GAAG,EAAE,gBAAgBjB,SAAS;MAAG;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EACxC,EAAAvB,qBAAA,GAAAC,SAAS,CAACH,UAAU,CAAC,cAAAE,qBAAA,uBAArBA,qBAAA,CAAuBwB,IAAI,KAAI,EAAE;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC,gBAAG7B,OAAA,CAAAE,SAAA,mBAAI;EAAC,gBAEpB,CAAC;AAGP,CAAC;AAACG,EAAA,CA3CIF,SAAS;AAAA4B,EAAA,GAAT5B,SAAS;AA6Cf,eAAeA,SAAS;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}