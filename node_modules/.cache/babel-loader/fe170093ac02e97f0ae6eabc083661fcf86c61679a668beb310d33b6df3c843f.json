{"ast":null,"code":"var _jsxFileName = \"/Users/rajatarora084/Desktop/diagnal-hiring-challenge/src/App.js\",\n  _s = $RefreshSig$();\n//import 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.scss';\nimport ListingPage from './components/listingPage/ListingPage';\nimport { createContext, useEffect, useState } from 'react';\nimport { fetchMovieData } from './apis/apis';\nimport { STATUS_MAP } from './utils/constants';\nimport ContextProvider from './utils/ContextProvider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [allMovies, setAllMovies] = useState([]);\n  const fetchData = async () => {\n    var _result$data, _result$data$page;\n    const result = await fetchMovieData({\n      currentPage: 1\n    });\n    console.log(\"data\", result === null || result === void 0 ? void 0 : (_result$data = result.data) === null || _result$data === void 0 ? void 0 : (_result$data$page = _result$data.page) === null || _result$data$page === void 0 ? void 0 : _result$data$page[\"content-items\"]);\n    try {\n      if (result.status == STATUS_MAP.OK) {\n        var _result$data2, _result$data2$page, _result$data2$page$co;\n        let newMovies = result === null || result === void 0 ? void 0 : (_result$data2 = result.data) === null || _result$data2 === void 0 ? void 0 : (_result$data2$page = _result$data2.page) === null || _result$data2$page === void 0 ? void 0 : (_result$data2$page$co = _result$data2$page[\"content-items\"]) === null || _result$data2$page$co === void 0 ? void 0 : _result$data2$page$co.content;\n        console.log(\"new movies\", newMovies);\n        setAllMovies(prev => {\n          return [...prev, ...newMovies];\n        });\n      } else throw new Error();\n    } catch {\n      setAllMovies([]);\n    }\n  };\n  useEffect(() => {\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(ContextProvider.Provider, {\n      value: {\n        allMovies\n      },\n      children: /*#__PURE__*/_jsxDEV(ListingPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"9xwj/v1xCO9whhbmF+KgcaY+6R8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["ListingPage","createContext","useEffect","useState","fetchMovieData","STATUS_MAP","ContextProvider","jsxDEV","_jsxDEV","App","_s","allMovies","setAllMovies","fetchData","_result$data","_result$data$page","result","currentPage","console","log","data","page","status","OK","_result$data2","_result$data2$page","_result$data2$page$co","newMovies","content","prev","Error","className","children","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/rajatarora084/Desktop/diagnal-hiring-challenge/src/App.js"],"sourcesContent":["//import 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.scss';\nimport ListingPage from './components/listingPage/ListingPage';\nimport { createContext, useEffect, useState } from 'react';\nimport { fetchMovieData } from './apis/apis';\nimport { STATUS_MAP } from './utils/constants';\nimport ContextProvider from './utils/ContextProvider';\n\n\nfunction App() {\n\n  const [allMovies, setAllMovies] = useState([]);\n\n\n  const fetchData = async () => {\n    const result = await fetchMovieData({ currentPage: 1 });\n    console.log(\"data\", result?.data?.page?.[\"content-items\"]);\n    try {\n      if (result.status == STATUS_MAP.OK) {\n        let newMovies = result?.data?.page?.[\"content-items\"]?.content\n        console.log(\"new movies\", newMovies);\n\n        setAllMovies(prev => {\n          return [\n            ...prev,\n            ...newMovies\n          ]\n\n        })\n      } else throw new Error();\n    } catch {\n      setAllMovies([]);\n    }\n\n  }\n  useEffect(() => {\n    fetchData();\n  }, []);\n  return (\n    <div className=\"App\">\n      <ContextProvider.Provider value={{\n        allMovies\n      }}>\n        <ListingPage />\n      </ContextProvider.Provider>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA;AACA,OAAO,YAAY;AACnB,OAAOA,WAAW,MAAM,sCAAsC;AAC9D,SAASC,aAAa,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,SAASC,cAAc,QAAQ,aAAa;AAC5C,SAASC,UAAU,QAAQ,mBAAmB;AAC9C,OAAOC,eAAe,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGtD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAG9C,MAAMU,SAAS,GAAG,MAAAA,CAAA,KAAY;IAAA,IAAAC,YAAA,EAAAC,iBAAA;IAC5B,MAAMC,MAAM,GAAG,MAAMZ,cAAc,CAAC;MAAEa,WAAW,EAAE;IAAE,CAAC,CAAC;IACvDC,OAAO,CAACC,GAAG,CAAC,MAAM,EAAEH,MAAM,aAANA,MAAM,wBAAAF,YAAA,GAANE,MAAM,CAAEI,IAAI,cAAAN,YAAA,wBAAAC,iBAAA,GAAZD,YAAA,CAAcO,IAAI,cAAAN,iBAAA,uBAAlBA,iBAAA,CAAqB,eAAe,CAAC,CAAC;IAC1D,IAAI;MACF,IAAIC,MAAM,CAACM,MAAM,IAAIjB,UAAU,CAACkB,EAAE,EAAE;QAAA,IAAAC,aAAA,EAAAC,kBAAA,EAAAC,qBAAA;QAClC,IAAIC,SAAS,GAAGX,MAAM,aAANA,MAAM,wBAAAQ,aAAA,GAANR,MAAM,CAAEI,IAAI,cAAAI,aAAA,wBAAAC,kBAAA,GAAZD,aAAA,CAAcH,IAAI,cAAAI,kBAAA,wBAAAC,qBAAA,GAAlBD,kBAAA,CAAqB,eAAe,CAAC,cAAAC,qBAAA,uBAArCA,qBAAA,CAAuCE,OAAO;QAC9DV,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEQ,SAAS,CAAC;QAEpCf,YAAY,CAACiB,IAAI,IAAI;UACnB,OAAO,CACL,GAAGA,IAAI,EACP,GAAGF,SAAS,CACb;QAEH,CAAC,CAAC;MACJ,CAAC,MAAM,MAAM,IAAIG,KAAK,CAAC,CAAC;IAC1B,CAAC,CAAC,MAAM;MACNlB,YAAY,CAAC,EAAE,CAAC;IAClB;EAEF,CAAC;EACDV,SAAS,CAAC,MAAM;IACdW,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EACN,oBACEL,OAAA;IAAKuB,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBxB,OAAA,CAACF,eAAe,CAAC2B,QAAQ;MAACC,KAAK,EAAE;QAC/BvB;MACF,CAAE;MAAAqB,QAAA,eACAxB,OAAA,CAACR,WAAW;QAAAmC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACS;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxB,CAAC;AAEV;AAAC5B,EAAA,CAtCQD,GAAG;AAAA8B,EAAA,GAAH9B,GAAG;AAwCZ,eAAeA,GAAG;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}