{"ast":null,"code":"var _jsxFileName = \"/Users/rajatarora084/Desktop/diagnal-hiring-challenge/src/App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.scss';\nimport ListingPage from './components/listingPage/ListingPage';\nimport { createContext, useEffect } from 'react';\nimport { fetchMovieData } from './apis/apis';\nimport { STATUS_MAP } from './utils/constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [allMovies, setAllMovies] = useState([]);\n  const ContextProvider = /*#__PURE__*/createContext({\n    allMovies\n  });\n  const fetchData = async () => {\n    const result = await fetchMovieData({\n      currentPage: 1\n    });\n    console.log(\"data\", result);\n    try {\n      if (result.status == STATUS_MAP.OK) {\n        var _result$data, _result$data$page, _result$data$page$con;\n        let newMovies = (result === null || result === void 0 ? void 0 : (_result$data = result.data) === null || _result$data === void 0 ? void 0 : (_result$data$page = _result$data.page) === null || _result$data$page === void 0 ? void 0 : (_result$data$page$con = _result$data$page[\"content-items\"]) === null || _result$data$page$con === void 0 ? void 0 : _result$data$page$con.content) | [];\n        setAllMovies(prev => {\n          return {\n            ...prev,\n            ...newMovies\n          };\n        });\n      } else throw new Error();\n    } catch {\n      setAllMoives([]);\n    }\n  };\n  useEffect(() => {\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(ContextProvider.Provider, {\n      value: allMovies,\n      children: /*#__PURE__*/_jsxDEV(ListingPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"9xwj/v1xCO9whhbmF+KgcaY+6R8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","ListingPage","createContext","useEffect","fetchMovieData","STATUS_MAP","jsxDEV","_jsxDEV","App","_s","allMovies","setAllMovies","useState","ContextProvider","fetchData","result","currentPage","console","log","status","OK","_result$data","_result$data$page","_result$data$page$con","newMovies","data","page","content","prev","Error","setAllMoives","className","children","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/rajatarora084/Desktop/diagnal-hiring-challenge/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.scss';\nimport ListingPage from './components/listingPage/ListingPage';\nimport { createContext, useEffect } from 'react';\nimport { fetchMovieData } from './apis/apis';\nimport { STATUS_MAP } from './utils/constants';\n\nfunction App() {\n\n  const [allMovies, setAllMovies] = useState([]);\n\n  const ContextProvider = createContext({\n    allMovies\n  })\n\n  const fetchData = async () => {\n    const result = await fetchMovieData({ currentPage: 1 });\n    console.log(\"data\", result);\n    try {\n      if (result.status == STATUS_MAP.OK) {\n        let newMovies = result?.data?.page?.[\"content-items\"]?.content | []\n\n        setAllMovies(prev => {\n          return {\n            ...prev,\n            ...newMovies\n          }\n        })\n      } else throw new Error();\n    } catch {\n      setAllMoives([]);\n    }\n\n  }\n  useEffect(() => {\n    fetchData();\n  }, []);\n  return (\n    <div className=\"App\">\n      <ContextProvider.Provider value={\n        allMovies\n      }>\n        <ListingPage />\n      </ContextProvider.Provider>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAO,YAAY;AACnB,OAAOC,WAAW,MAAM,sCAAsC;AAC9D,SAASC,aAAa,EAAEC,SAAS,QAAQ,OAAO;AAChD,SAASC,cAAc,QAAQ,aAAa;AAC5C,SAASC,UAAU,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAMC,eAAe,gBAAGX,aAAa,CAAC;IACpCQ;EACF,CAAC,CAAC;EAEF,MAAMI,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,MAAMC,MAAM,GAAG,MAAMX,cAAc,CAAC;MAAEY,WAAW,EAAE;IAAE,CAAC,CAAC;IACvDC,OAAO,CAACC,GAAG,CAAC,MAAM,EAAEH,MAAM,CAAC;IAC3B,IAAI;MACF,IAAIA,MAAM,CAACI,MAAM,IAAId,UAAU,CAACe,EAAE,EAAE;QAAA,IAAAC,YAAA,EAAAC,iBAAA,EAAAC,qBAAA;QAClC,IAAIC,SAAS,GAAG,CAAAT,MAAM,aAANA,MAAM,wBAAAM,YAAA,GAANN,MAAM,CAAEU,IAAI,cAAAJ,YAAA,wBAAAC,iBAAA,GAAZD,YAAA,CAAcK,IAAI,cAAAJ,iBAAA,wBAAAC,qBAAA,GAAlBD,iBAAA,CAAqB,eAAe,CAAC,cAAAC,qBAAA,uBAArCA,qBAAA,CAAuCI,OAAO,IAAG,EAAE;QAEnEhB,YAAY,CAACiB,IAAI,IAAI;UACnB,OAAO;YACL,GAAGA,IAAI;YACP,GAAGJ;UACL,CAAC;QACH,CAAC,CAAC;MACJ,CAAC,MAAM,MAAM,IAAIK,KAAK,CAAC,CAAC;IAC1B,CAAC,CAAC,MAAM;MACNC,YAAY,CAAC,EAAE,CAAC;IAClB;EAEF,CAAC;EACD3B,SAAS,CAAC,MAAM;IACdW,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EACN,oBACEP,OAAA;IAAKwB,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBzB,OAAA,CAACM,eAAe,CAACoB,QAAQ;MAACC,KAAK,EAC7BxB,SACD;MAAAsB,QAAA,eACCzB,OAAA,CAACN,WAAW;QAAAkC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACS;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxB,CAAC;AAEV;AAAC7B,EAAA,CAvCQD,GAAG;AAAA+B,EAAA,GAAH/B,GAAG;AAyCZ,eAAeA,GAAG;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}